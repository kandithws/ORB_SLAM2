// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: detection.proto

#include "detection.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_detection_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_detection_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Point2d;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_detection_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Detection;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_detection_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Rect;
}  // namespace protobuf_detection_2eproto
namespace detection_service {
class ImageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Image>
      _instance;
} _Image_default_instance_;
class Point2dDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Point2d>
      _instance;
} _Point2d_default_instance_;
class RectDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Rect>
      _instance;
} _Rect_default_instance_;
class DetectionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Detection>
      _instance;
} _Detection_default_instance_;
class DetectionsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Detections>
      _instance;
} _Detections_default_instance_;
}  // namespace detection_service
namespace protobuf_detection_2eproto {
static void InitDefaultsImage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::detection_service::_Image_default_instance_;
    new (ptr) ::detection_service::Image();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::detection_service::Image::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Image =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsImage}, {}};

static void InitDefaultsPoint2d() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::detection_service::_Point2d_default_instance_;
    new (ptr) ::detection_service::Point2d();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::detection_service::Point2d::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Point2d =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPoint2d}, {}};

static void InitDefaultsRect() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::detection_service::_Rect_default_instance_;
    new (ptr) ::detection_service::Rect();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::detection_service::Rect::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Rect =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRect}, {
      &protobuf_detection_2eproto::scc_info_Point2d.base,}};

static void InitDefaultsDetection() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::detection_service::_Detection_default_instance_;
    new (ptr) ::detection_service::Detection();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::detection_service::Detection::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Detection =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDetection}, {
      &protobuf_detection_2eproto::scc_info_Rect.base,}};

static void InitDefaultsDetections() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::detection_service::_Detections_default_instance_;
    new (ptr) ::detection_service::Detections();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::detection_service::Detections::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Detections =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDetections}, {
      &protobuf_detection_2eproto::scc_info_Detection.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Image.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Point2d.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Rect.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Detection.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Detections.base);
}

::google::protobuf::Metadata file_level_metadata[5];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::detection_service::Image, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::detection_service::Image, width_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::detection_service::Image, height_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::detection_service::Image, encoding_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::detection_service::Image, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::detection_service::Point2d, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::detection_service::Point2d, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::detection_service::Point2d, y_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::detection_service::Rect, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::detection_service::Rect, tl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::detection_service::Rect, br_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::detection_service::Detection, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::detection_service::Detection, confidence_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::detection_service::Detection, label_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::detection_service::Detection, label_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::detection_service::Detection, box_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::detection_service::Detections, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::detection_service::Detections, detections_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::detection_service::Image)},
  { 9, -1, sizeof(::detection_service::Point2d)},
  { 16, -1, sizeof(::detection_service::Rect)},
  { 23, -1, sizeof(::detection_service::Detection)},
  { 32, -1, sizeof(::detection_service::Detections)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::detection_service::_Image_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::detection_service::_Point2d_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::detection_service::_Rect_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::detection_service::_Detection_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::detection_service::_Detections_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "detection.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 5);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\017detection.proto\022\021detection_service\"F\n\005"
      "Image\022\r\n\005width\030\001 \001(\r\022\016\n\006height\030\002 \001(\r\022\020\n\010"
      "encoding\030\004 \001(\t\022\014\n\004data\030\005 \001(\014\"\037\n\007Point2d\022"
      "\t\n\001x\030\001 \001(\005\022\t\n\001y\030\002 \001(\005\"V\n\004Rect\022&\n\002tl\030\001 \001("
      "\0132\032.detection_service.Point2d\022&\n\002br\030\002 \001("
      "\0132\032.detection_service.Point2d\"f\n\tDetecti"
      "on\022\022\n\nconfidence\030\001 \001(\002\022\020\n\010label_id\030\002 \001(\r"
      "\022\r\n\005label\030\003 \001(\t\022$\n\003box\030\004 \001(\0132\027.detection"
      "_service.Rect\">\n\nDetections\0220\n\ndetection"
      "s\030\001 \003(\0132\034.detection_service.Detection2`\n"
      "\020DetectionService\022L\n\017ObjectDetection\022\030.d"
      "etection_service.Image\032\035.detection_servi"
      "ce.Detections\"\000b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 503);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "detection.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_detection_2eproto
namespace detection_service {

// ===================================================================

void Image::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Image::kWidthFieldNumber;
const int Image::kHeightFieldNumber;
const int Image::kEncodingFieldNumber;
const int Image::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Image::Image()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_detection_2eproto::scc_info_Image.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:detection_service.Image)
}
Image::Image(const Image& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  encoding_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.encoding().size() > 0) {
    encoding_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.encoding_);
  }
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  ::memcpy(&width_, &from.width_,
    static_cast<size_t>(reinterpret_cast<char*>(&height_) -
    reinterpret_cast<char*>(&width_)) + sizeof(height_));
  // @@protoc_insertion_point(copy_constructor:detection_service.Image)
}

void Image::SharedCtor() {
  encoding_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&width_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&height_) -
      reinterpret_cast<char*>(&width_)) + sizeof(height_));
}

Image::~Image() {
  // @@protoc_insertion_point(destructor:detection_service.Image)
  SharedDtor();
}

void Image::SharedDtor() {
  encoding_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Image::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Image::descriptor() {
  ::protobuf_detection_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_detection_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Image& Image::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_detection_2eproto::scc_info_Image.base);
  return *internal_default_instance();
}


void Image::Clear() {
// @@protoc_insertion_point(message_clear_start:detection_service.Image)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  encoding_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&width_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&height_) -
      reinterpret_cast<char*>(&width_)) + sizeof(height_));
  _internal_metadata_.Clear();
}

bool Image::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:detection_service.Image)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 width = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 height = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string encoding = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_encoding()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->encoding().data(), static_cast<int>(this->encoding().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "detection_service.Image.encoding"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes data = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:detection_service.Image)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:detection_service.Image)
  return false;
#undef DO_
}

void Image::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:detection_service.Image)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 width = 1;
  if (this->width() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->width(), output);
  }

  // uint32 height = 2;
  if (this->height() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->height(), output);
  }

  // string encoding = 4;
  if (this->encoding().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->encoding().data(), static_cast<int>(this->encoding().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "detection_service.Image.encoding");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->encoding(), output);
  }

  // bytes data = 5;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:detection_service.Image)
}

::google::protobuf::uint8* Image::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:detection_service.Image)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 width = 1;
  if (this->width() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->width(), target);
  }

  // uint32 height = 2;
  if (this->height() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->height(), target);
  }

  // string encoding = 4;
  if (this->encoding().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->encoding().data(), static_cast<int>(this->encoding().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "detection_service.Image.encoding");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->encoding(), target);
  }

  // bytes data = 5;
  if (this->data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->data(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:detection_service.Image)
  return target;
}

size_t Image::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:detection_service.Image)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string encoding = 4;
  if (this->encoding().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->encoding());
  }

  // bytes data = 5;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  // uint32 width = 1;
  if (this->width() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->width());
  }

  // uint32 height = 2;
  if (this->height() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->height());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Image::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:detection_service.Image)
  GOOGLE_DCHECK_NE(&from, this);
  const Image* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Image>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:detection_service.Image)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:detection_service.Image)
    MergeFrom(*source);
  }
}

void Image::MergeFrom(const Image& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:detection_service.Image)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.encoding().size() > 0) {

    encoding_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.encoding_);
  }
  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  if (from.width() != 0) {
    set_width(from.width());
  }
  if (from.height() != 0) {
    set_height(from.height());
  }
}

void Image::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:detection_service.Image)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Image::CopyFrom(const Image& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:detection_service.Image)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Image::IsInitialized() const {
  return true;
}

void Image::Swap(Image* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Image::InternalSwap(Image* other) {
  using std::swap;
  encoding_.Swap(&other->encoding_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  data_.Swap(&other->data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(width_, other->width_);
  swap(height_, other->height_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Image::GetMetadata() const {
  protobuf_detection_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_detection_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Point2d::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Point2d::kXFieldNumber;
const int Point2d::kYFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Point2d::Point2d()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_detection_2eproto::scc_info_Point2d.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:detection_service.Point2d)
}
Point2d::Point2d(const Point2d& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&y_) -
    reinterpret_cast<char*>(&x_)) + sizeof(y_));
  // @@protoc_insertion_point(copy_constructor:detection_service.Point2d)
}

void Point2d::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&x_)) + sizeof(y_));
}

Point2d::~Point2d() {
  // @@protoc_insertion_point(destructor:detection_service.Point2d)
  SharedDtor();
}

void Point2d::SharedDtor() {
}

void Point2d::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Point2d::descriptor() {
  ::protobuf_detection_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_detection_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Point2d& Point2d::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_detection_2eproto::scc_info_Point2d.base);
  return *internal_default_instance();
}


void Point2d::Clear() {
// @@protoc_insertion_point(message_clear_start:detection_service.Point2d)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&x_)) + sizeof(y_));
  _internal_metadata_.Clear();
}

bool Point2d::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:detection_service.Point2d)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:detection_service.Point2d)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:detection_service.Point2d)
  return false;
#undef DO_
}

void Point2d::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:detection_service.Point2d)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 x = 1;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->x(), output);
  }

  // int32 y = 2;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->y(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:detection_service.Point2d)
}

::google::protobuf::uint8* Point2d::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:detection_service.Point2d)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 x = 1;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->x(), target);
  }

  // int32 y = 2;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->y(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:detection_service.Point2d)
  return target;
}

size_t Point2d::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:detection_service.Point2d)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 x = 1;
  if (this->x() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->x());
  }

  // int32 y = 2;
  if (this->y() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->y());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Point2d::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:detection_service.Point2d)
  GOOGLE_DCHECK_NE(&from, this);
  const Point2d* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Point2d>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:detection_service.Point2d)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:detection_service.Point2d)
    MergeFrom(*source);
  }
}

void Point2d::MergeFrom(const Point2d& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:detection_service.Point2d)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
}

void Point2d::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:detection_service.Point2d)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Point2d::CopyFrom(const Point2d& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:detection_service.Point2d)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Point2d::IsInitialized() const {
  return true;
}

void Point2d::Swap(Point2d* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Point2d::InternalSwap(Point2d* other) {
  using std::swap;
  swap(x_, other->x_);
  swap(y_, other->y_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Point2d::GetMetadata() const {
  protobuf_detection_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_detection_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Rect::InitAsDefaultInstance() {
  ::detection_service::_Rect_default_instance_._instance.get_mutable()->tl_ = const_cast< ::detection_service::Point2d*>(
      ::detection_service::Point2d::internal_default_instance());
  ::detection_service::_Rect_default_instance_._instance.get_mutable()->br_ = const_cast< ::detection_service::Point2d*>(
      ::detection_service::Point2d::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Rect::kTlFieldNumber;
const int Rect::kBrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Rect::Rect()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_detection_2eproto::scc_info_Rect.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:detection_service.Rect)
}
Rect::Rect(const Rect& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_tl()) {
    tl_ = new ::detection_service::Point2d(*from.tl_);
  } else {
    tl_ = NULL;
  }
  if (from.has_br()) {
    br_ = new ::detection_service::Point2d(*from.br_);
  } else {
    br_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:detection_service.Rect)
}

void Rect::SharedCtor() {
  ::memset(&tl_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&br_) -
      reinterpret_cast<char*>(&tl_)) + sizeof(br_));
}

Rect::~Rect() {
  // @@protoc_insertion_point(destructor:detection_service.Rect)
  SharedDtor();
}

void Rect::SharedDtor() {
  if (this != internal_default_instance()) delete tl_;
  if (this != internal_default_instance()) delete br_;
}

void Rect::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Rect::descriptor() {
  ::protobuf_detection_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_detection_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Rect& Rect::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_detection_2eproto::scc_info_Rect.base);
  return *internal_default_instance();
}


void Rect::Clear() {
// @@protoc_insertion_point(message_clear_start:detection_service.Rect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && tl_ != NULL) {
    delete tl_;
  }
  tl_ = NULL;
  if (GetArenaNoVirtual() == NULL && br_ != NULL) {
    delete br_;
  }
  br_ = NULL;
  _internal_metadata_.Clear();
}

bool Rect::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:detection_service.Rect)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .detection_service.Point2d tl = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_tl()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .detection_service.Point2d br = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_br()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:detection_service.Rect)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:detection_service.Rect)
  return false;
#undef DO_
}

void Rect::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:detection_service.Rect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .detection_service.Point2d tl = 1;
  if (this->has_tl()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_tl(), output);
  }

  // .detection_service.Point2d br = 2;
  if (this->has_br()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_br(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:detection_service.Rect)
}

::google::protobuf::uint8* Rect::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:detection_service.Rect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .detection_service.Point2d tl = 1;
  if (this->has_tl()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_tl(), deterministic, target);
  }

  // .detection_service.Point2d br = 2;
  if (this->has_br()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_br(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:detection_service.Rect)
  return target;
}

size_t Rect::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:detection_service.Rect)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .detection_service.Point2d tl = 1;
  if (this->has_tl()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *tl_);
  }

  // .detection_service.Point2d br = 2;
  if (this->has_br()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *br_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Rect::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:detection_service.Rect)
  GOOGLE_DCHECK_NE(&from, this);
  const Rect* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Rect>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:detection_service.Rect)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:detection_service.Rect)
    MergeFrom(*source);
  }
}

void Rect::MergeFrom(const Rect& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:detection_service.Rect)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_tl()) {
    mutable_tl()->::detection_service::Point2d::MergeFrom(from.tl());
  }
  if (from.has_br()) {
    mutable_br()->::detection_service::Point2d::MergeFrom(from.br());
  }
}

void Rect::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:detection_service.Rect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Rect::CopyFrom(const Rect& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:detection_service.Rect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Rect::IsInitialized() const {
  return true;
}

void Rect::Swap(Rect* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Rect::InternalSwap(Rect* other) {
  using std::swap;
  swap(tl_, other->tl_);
  swap(br_, other->br_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Rect::GetMetadata() const {
  protobuf_detection_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_detection_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Detection::InitAsDefaultInstance() {
  ::detection_service::_Detection_default_instance_._instance.get_mutable()->box_ = const_cast< ::detection_service::Rect*>(
      ::detection_service::Rect::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Detection::kConfidenceFieldNumber;
const int Detection::kLabelIdFieldNumber;
const int Detection::kLabelFieldNumber;
const int Detection::kBoxFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Detection::Detection()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_detection_2eproto::scc_info_Detection.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:detection_service.Detection)
}
Detection::Detection(const Detection& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  label_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.label().size() > 0) {
    label_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.label_);
  }
  if (from.has_box()) {
    box_ = new ::detection_service::Rect(*from.box_);
  } else {
    box_ = NULL;
  }
  ::memcpy(&confidence_, &from.confidence_,
    static_cast<size_t>(reinterpret_cast<char*>(&label_id_) -
    reinterpret_cast<char*>(&confidence_)) + sizeof(label_id_));
  // @@protoc_insertion_point(copy_constructor:detection_service.Detection)
}

void Detection::SharedCtor() {
  label_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&box_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&label_id_) -
      reinterpret_cast<char*>(&box_)) + sizeof(label_id_));
}

Detection::~Detection() {
  // @@protoc_insertion_point(destructor:detection_service.Detection)
  SharedDtor();
}

void Detection::SharedDtor() {
  label_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete box_;
}

void Detection::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Detection::descriptor() {
  ::protobuf_detection_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_detection_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Detection& Detection::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_detection_2eproto::scc_info_Detection.base);
  return *internal_default_instance();
}


void Detection::Clear() {
// @@protoc_insertion_point(message_clear_start:detection_service.Detection)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  label_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && box_ != NULL) {
    delete box_;
  }
  box_ = NULL;
  ::memset(&confidence_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&label_id_) -
      reinterpret_cast<char*>(&confidence_)) + sizeof(label_id_));
  _internal_metadata_.Clear();
}

bool Detection::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:detection_service.Detection)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float confidence = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &confidence_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 label_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &label_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string label = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_label()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->label().data(), static_cast<int>(this->label().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "detection_service.Detection.label"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .detection_service.Rect box = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_box()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:detection_service.Detection)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:detection_service.Detection)
  return false;
#undef DO_
}

void Detection::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:detection_service.Detection)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float confidence = 1;
  if (this->confidence() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->confidence(), output);
  }

  // uint32 label_id = 2;
  if (this->label_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->label_id(), output);
  }

  // string label = 3;
  if (this->label().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->label().data(), static_cast<int>(this->label().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "detection_service.Detection.label");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->label(), output);
  }

  // .detection_service.Rect box = 4;
  if (this->has_box()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_box(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:detection_service.Detection)
}

::google::protobuf::uint8* Detection::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:detection_service.Detection)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float confidence = 1;
  if (this->confidence() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->confidence(), target);
  }

  // uint32 label_id = 2;
  if (this->label_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->label_id(), target);
  }

  // string label = 3;
  if (this->label().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->label().data(), static_cast<int>(this->label().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "detection_service.Detection.label");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->label(), target);
  }

  // .detection_service.Rect box = 4;
  if (this->has_box()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_box(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:detection_service.Detection)
  return target;
}

size_t Detection::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:detection_service.Detection)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string label = 3;
  if (this->label().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->label());
  }

  // .detection_service.Rect box = 4;
  if (this->has_box()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *box_);
  }

  // float confidence = 1;
  if (this->confidence() != 0) {
    total_size += 1 + 4;
  }

  // uint32 label_id = 2;
  if (this->label_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->label_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Detection::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:detection_service.Detection)
  GOOGLE_DCHECK_NE(&from, this);
  const Detection* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Detection>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:detection_service.Detection)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:detection_service.Detection)
    MergeFrom(*source);
  }
}

void Detection::MergeFrom(const Detection& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:detection_service.Detection)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.label().size() > 0) {

    label_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.label_);
  }
  if (from.has_box()) {
    mutable_box()->::detection_service::Rect::MergeFrom(from.box());
  }
  if (from.confidence() != 0) {
    set_confidence(from.confidence());
  }
  if (from.label_id() != 0) {
    set_label_id(from.label_id());
  }
}

void Detection::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:detection_service.Detection)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Detection::CopyFrom(const Detection& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:detection_service.Detection)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Detection::IsInitialized() const {
  return true;
}

void Detection::Swap(Detection* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Detection::InternalSwap(Detection* other) {
  using std::swap;
  label_.Swap(&other->label_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(box_, other->box_);
  swap(confidence_, other->confidence_);
  swap(label_id_, other->label_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Detection::GetMetadata() const {
  protobuf_detection_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_detection_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Detections::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Detections::kDetectionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Detections::Detections()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_detection_2eproto::scc_info_Detections.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:detection_service.Detections)
}
Detections::Detections(const Detections& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      detections_(from.detections_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:detection_service.Detections)
}

void Detections::SharedCtor() {
}

Detections::~Detections() {
  // @@protoc_insertion_point(destructor:detection_service.Detections)
  SharedDtor();
}

void Detections::SharedDtor() {
}

void Detections::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Detections::descriptor() {
  ::protobuf_detection_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_detection_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Detections& Detections::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_detection_2eproto::scc_info_Detections.base);
  return *internal_default_instance();
}


void Detections::Clear() {
// @@protoc_insertion_point(message_clear_start:detection_service.Detections)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  detections_.Clear();
  _internal_metadata_.Clear();
}

bool Detections::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:detection_service.Detections)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .detection_service.Detection detections = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_detections()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:detection_service.Detections)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:detection_service.Detections)
  return false;
#undef DO_
}

void Detections::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:detection_service.Detections)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .detection_service.Detection detections = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->detections_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->detections(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:detection_service.Detections)
}

::google::protobuf::uint8* Detections::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:detection_service.Detections)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .detection_service.Detection detections = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->detections_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->detections(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:detection_service.Detections)
  return target;
}

size_t Detections::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:detection_service.Detections)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .detection_service.Detection detections = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->detections_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->detections(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Detections::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:detection_service.Detections)
  GOOGLE_DCHECK_NE(&from, this);
  const Detections* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Detections>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:detection_service.Detections)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:detection_service.Detections)
    MergeFrom(*source);
  }
}

void Detections::MergeFrom(const Detections& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:detection_service.Detections)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  detections_.MergeFrom(from.detections_);
}

void Detections::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:detection_service.Detections)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Detections::CopyFrom(const Detections& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:detection_service.Detections)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Detections::IsInitialized() const {
  return true;
}

void Detections::Swap(Detections* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Detections::InternalSwap(Detections* other) {
  using std::swap;
  CastToBase(&detections_)->InternalSwap(CastToBase(&other->detections_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Detections::GetMetadata() const {
  protobuf_detection_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_detection_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace detection_service
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::detection_service::Image* Arena::CreateMaybeMessage< ::detection_service::Image >(Arena* arena) {
  return Arena::CreateInternal< ::detection_service::Image >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::detection_service::Point2d* Arena::CreateMaybeMessage< ::detection_service::Point2d >(Arena* arena) {
  return Arena::CreateInternal< ::detection_service::Point2d >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::detection_service::Rect* Arena::CreateMaybeMessage< ::detection_service::Rect >(Arena* arena) {
  return Arena::CreateInternal< ::detection_service::Rect >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::detection_service::Detection* Arena::CreateMaybeMessage< ::detection_service::Detection >(Arena* arena) {
  return Arena::CreateInternal< ::detection_service::Detection >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::detection_service::Detections* Arena::CreateMaybeMessage< ::detection_service::Detections >(Arena* arena) {
  return Arena::CreateInternal< ::detection_service::Detections >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
